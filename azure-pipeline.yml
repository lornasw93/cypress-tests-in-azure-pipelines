trigger:
- master

jobs:
- job: Job_1
  displayName: Pre-reqs
  steps:
  - checkout: self
  - task: DeleteFiles@1
    displayName: Delete old results
    inputs:
      SourceFolder: $(System.DefaultWorkingDirectory)/cypress/results/
      Contents: '*.*'
  - task: Npm@1
    displayName: npm ci
    inputs:
      verbose: false
  - task: CmdLine@2
    displayName: Check Cypress Installed
    inputs:
      script: >
        npx cypress verify
  - task: Npm@1
    displayName: npm install -g wait-on
    inputs:
      verbose: false


- job: Job_2
  dependsOn: Job_1
  condition: succeeded()
  displayName: Run-Cypress-Tests
  steps:
  - checkout: none
  - task: CmdLine@2
    displayName: Run-Tests
    continueOnError: True
    inputs:
      workingDirectory: $(System.DefaultWorkingDirectory)
      script: >
        npm run start:e2e & wait-on http://localhost:4173 & npm run cy:run-junit-reporter:e2e
  - task: PublishTestResults@2
    displayName: Publish JUnit Test Results
    condition: succeededOrFailed()
    inputs:
 testResultsFormat: 'JUnit'
      testResultsFiles: '$(System.DefaultWorkingDirectory)/cypress/results/result-*.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: true
      testRunTitle: Cypress Test Results


- job: Job_3
  dependsOn: Job_2
  condition: eq(dependencies.Job_2.result,'SucceededWithIssues')
  displayName: Publish-Screens-on-Fail
  steps:
  - checkout: none
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: screenshots'
    condition: succeededOrFailed()
    continueOnError: True
    inputs:
      PathtoPublish: $(System.DefaultWorkingDirectory)/cypress/screenshots
      ArtifactName: screenshots
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: videos'
    condition: succeededOrFailed()
    continueOnError: True
    inputs:
      PathtoPublish: $(System.DefaultWorkingDirectory)/cypress/videos
      ArtifactName: video